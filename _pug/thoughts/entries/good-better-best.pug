extends ../../layout

block vars
  - var pageDescription = 'What does it mean to be good at something?'
  - var bodyClass = 'thoughts layout-sub'

block title
  | Good. Better. Best. - 

block content

  .content-container.entry

    small.date.upper 22 October 2013
    h1 Good. Better. Best.

    p  A few weeks ago I tweeted this:

    <blockquote class="twitter-tweet" lang="en"><p lang="en" dir="ltr">It infuriates me when people say I can or should only be good at one thing. I&#39;ll be awesome at lots of things, thank you very much.</p>&mdash; Lynn Fisher (@lynnandtonic) <a href="https://twitter.com/lynnandtonic/status/387622415582253058">October 8, 2013</a></blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

    p  While I think the tweet sums up my point pretty succinctly, I thought it might be good to elaborate.

    p  We’ve all heard the arguments. With our limited time and energy, we should focus on being awesome at one thing. Let us not spread ourselves too thin or become jacks-of-all-trades but masters-of-none. It makes sense. I agree with this on some philosophical level. What I don’t like is how it’s applied.

    p  I’ve observed this mantra of “doing one thing well” being used as a shield. It’s the perfect excuse to not learn that new skill or try that unknown project. And even worse, I’ve seen it used to #[em discourage] designers from learning how to code. Well, I’d like to politely respond with, “Fuck that.”

    p  People are capable of so much. Be good at lots of things.

    p  This conversation begs for more definition around the word “good”. Of course “good” is relative and that’s okay. What we should avoid are harmful comparisons.

    p: em “I’ll never be as good as so and so.”

    p: em “She’s better at this than I am.”

    p: em “I’m not the best person to do this work.”

    p Good. Better. Best.

    p ....

    p A few months ago I couldn’t solve a Rubik’s cube to save my life. I decided I wanted to learn, so I looked up tutorials and sought advice from my friend Andy. It took weeks of practice, but I can now reliably solve the cube every time, with an average of about three minutes.

    p  There are definitely people who can solve it faster and with fewer moves. And I’ll never be as good as Mats Valk, who recently solved it in 5.55 seconds. But for most Rubik’s cube scenarios I predict I’ll be involved with, I feel no guilt in saying I’m good at it. What’s an appropriate gauge? I’d be confident in having a team rely on me to solve one (as long as we have three minutes).

    p ....

    p The truth is, in most businesses there’s a lot of work to be done and the difficulty of that work varies. The best person to do a task often isn’t the best person at that skill set. You’d likely not have a full-stack JavaScript developer building basic interactions on a static website. But you definitely could give that task to a designer who is good with JQuery. Not being the best shouldn’t deter us from learning skills that can contribute to our team and projects.

    p Yes, you may not be as good at development as someone who focuses solely on that. But wouldn’t it be great if you were a designer who could do both? Keep learning. Be better than you were yesterday. You may not be the best, but you can be awesome.

    p Learning new skills, even if you don’t think you’ll use them at your job, helps broaden our perspectives. Learn programming to better understand the developers we work with. Start writing to understand the process of content creators. There’s no better path to understanding than doing.

    p Here’s another tweet I 100% believe in.

    <blockquote class="twitter-tweet" lang="en"><p lang="en" dir="ltr">I think every &quot;How to Work with X or Y Person&quot; article can be summed up with &quot;Understand them and appreciate them.&quot;</p>&mdash; Lynn Fisher (@lynnandtonic) <a href="https://twitter.com/lynnandtonic/status/373446534316048384">August 30, 2013</a></blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

    p Respect and appreciate your colleagues by learning what they do. Asking questions has an incredible ripple effect. The second you ask your colleague to help you learn, you’ve turned them into a teacher.

    p Who knows what the future will hold? Things are changing constantly, especially with the web. Don’t pass on opportunities to learn new things. You can be good at them. Curiosity and a passion for learning are qualities of a good designer. That alone will make you better, and probably the best kind of designer to work with.

    p #[a.back(href='/thoughts') ← Back to recent writing list]
